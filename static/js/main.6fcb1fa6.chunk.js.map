{"version":3,"sources":["App.js","index.js"],"names":["Table","styled","table","Cell","td","Active","div","STATUSES","stating","win","draw","play","CHARACTERS","initialState","handCount","isCircleTurn","circleTurn","className","crossTurn","cells","progress","message","winLine","reducer","state","action","type","index","turn","i","length","winLineCell","a","b","c","checkWinner","replace","App","useReducer","dispatch","cell","onClick","ReactDOM","render","document","getElementById"],"mappings":"ksBAMA,IAAMA,EAAQC,IAAOC,MAAV,KAILC,EAAOF,IAAOG,GAAV,KAQJC,EAASJ,IAAOK,IAAV,KAINC,EAAW,CACbC,QAAS,cACTC,IAAK,eACLC,KAAM,OACNC,KAAM,aAGJC,EACM,SADNA,EAEK,OAGLC,EAAe,CACjBC,UAAW,EACXC,cAAc,EACdC,WAAY,yBAAKC,UAAU,aAAY,kBAACZ,EAAD,gBACvCa,UAAW,yBAAKD,UAAU,aAAf,QACXE,MAAO,CACH,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,MAETC,UAAU,EACVC,QAASd,EAASC,SAGhBc,EAAU,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAkBX,IAAMC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,aACD,IAAIP,EAAQK,EAAML,MACdJ,EAAeS,EAAMT,aACrBK,EAAWI,EAAMJ,SACjBC,EAAUd,EAASI,KACnBG,EAAYU,EAAMV,UAClBE,EAAaQ,EAAMR,WACnBE,EAAYM,EAAMN,UAEtB,GAAIC,EAAMM,EAAOE,SAAWP,EACxB,OAAOI,EAGX,IAAII,EAAOJ,EAAMT,aAAeH,EAAoBA,EAUpD,GATAO,EAAMM,EAAOE,OAASC,EAIJ,KAFlBd,GAAwB,IAEAM,IACpBA,GAAW,EACXC,EAAUd,EAASG,MArCnC,SAAqBS,GACjB,IAAK,IAAIU,EAAI,EAAGA,GAAKP,EAAQQ,OAAS,EAAGD,IAAK,CAC1C,IAAME,EAAcT,EAAQO,GACxBG,EAAIb,EAAMY,EAAY,IACtBE,EAAId,EAAMY,EAAY,IACtBG,EAAIf,EAAMY,EAAY,IAC1B,GAAU,OAANC,GAAoB,OAANC,GAAoB,OAANC,IAG5BF,IAAMC,GAAKA,IAAMC,GACjB,OAAO,GA8BHC,CAAYhB,GACZC,GAAW,EAEXC,EADmBN,EAAeR,EAASE,IAAI2B,QAAQ,SAAUxB,GAAqBL,EAASE,IAAI2B,QAAQ,SAAUxB,GAYzH,OARIY,EAAMT,cACNC,EAAa,yBAAKC,UAAU,aAAf,UACbC,EAAY,yBAAKD,UAAU,aAAY,kBAACZ,EAAD,gBAEvCW,EAAa,yBAAKC,UAAU,aAAY,kBAACZ,EAAD,gBACxCa,EAAY,yBAAKD,UAAU,aAAf,SAGT,eACAO,EADP,CAEIV,UAAWA,EACXC,cAAeA,EACfC,WAAYA,EACZE,UAAWA,EACXC,QACAC,WACAC,YAGR,IAAK,gBACD,MAAO,CACHP,UAAW,EACXC,cAAc,EACdC,WAAY,yBAAKC,UAAU,aAAY,kBAACZ,EAAD,gBACvCa,UAAW,yBAAKD,UAAU,aAAf,QACXE,MAAO,CACH,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,KACL,EAAK,MAETC,UAAU,EACVC,QAASd,EAASC,SAE1B,QAAS,OAAOgB,IAIT,SAASa,IAAO,IAAD,EACAC,qBAAWf,EAASV,GADpB,mBACnBW,EADmB,KACZe,EADY,KAEpBC,EAAO,SAACX,GAAD,OAAO,kBAAC1B,EAAD,CAAMc,UAAU,eAAewB,QAAS,kBAAMF,EAAS,CAAEb,KAAM,aAAcC,MAAOE,MAAOL,EAAML,MAAMU,KAE3H,OACI,yBAAKZ,UAAU,eACX,0BAAMA,UAAU,UACZ,4BAAQA,UAAU,UACd,4CAEJ,yBAAKA,UAAU,WACX,yBAAKA,UAAU,QACVO,EAAMR,WACNQ,EAAMN,YAGf,yBAAKD,UAAU,WACX,kBAACjB,EAAD,KACI,+BACI,4BACKwC,EAAK,GACLA,EAAK,GACLA,EAAK,IAEV,4BACKA,EAAK,GACLA,EAAK,GACLA,EAAK,IAEV,4BACKA,EAAK,GACLA,EAAK,GACLA,EAAK,OAKtB,yBAAKvB,UAAU,mBACX,yBAAKA,UAAU,kCAAkCO,EAAMH,SACvD,6BACI,4BAAQJ,UAAU,oBAAoBwB,QAAS,kBAAMF,EAAS,CAAEb,KAAM,oBAAtE,eC7LxBgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6fcb1fa6.chunk.js","sourcesContent":["\r\nimport React, { useReducer } from 'react'\r\n\r\nimport \"./App.css\"\r\nimport styled from 'styled-components'\r\n\r\nconst Table = styled.table`\r\n    border-collapse: collapse;\r\n    margin: 0 auto;\r\n`\r\nconst Cell = styled.td`\r\n    border: solid 2px black;\r\n    width: 50px;\r\n    height: 50px;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    font-size: 25px;    \r\n`\r\nconst Active = styled.div`\r\n    border-bottom: 4px solid black;\r\n`\r\n\r\nconst STATUSES = {\r\n    stating: 'starting...',\r\n    win: '%name% win!!',\r\n    draw: 'draw',\r\n    play: 'playing!!',\r\n}\r\n\r\nconst CHARACTERS = {\r\n    circle: '○',\r\n    cross: '×',\r\n}\r\n\r\nconst initialState = {\r\n    handCount: 0,\r\n    isCircleTurn: true,\r\n    circleTurn: <div className=\"turn-item\"><Active>〇</Active></div>,\r\n    crossTurn: <div className=\"turn-item\">×</div>,\r\n    cells: {\r\n        \"0\": null,\r\n        \"1\": null,\r\n        \"2\": null,\r\n        \"3\": null,\r\n        \"4\": null,\r\n        \"5\": null,\r\n        \"6\": null,\r\n        \"7\": null,\r\n        \"8\": null\r\n    },\r\n    progress: true,\r\n    message: STATUSES.stating,\r\n}\r\n\r\nconst winLine = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n]\r\n\r\nfunction checkWinner(cells) {\r\n    for (let i = 0; i <= winLine.length - 1; i++) {\r\n        const winLineCell = winLine[i]\r\n        let a = cells[winLineCell[0]]\r\n        let b = cells[winLineCell[1]]\r\n        let c = cells[winLineCell[2]]\r\n        if (a === null || b === null || c === null) {\r\n            continue\r\n        }\r\n        if (a === b && b === c) {\r\n            return true\r\n        }\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CLICK_CELL':\r\n            var cells = state.cells\r\n            var isCircleTurn = state.isCircleTurn\r\n            var progress = state.progress\r\n            var message = STATUSES.play\r\n            var handCount = state.handCount\r\n            var circleTurn = state.circleTurn\r\n            var crossTurn = state.crossTurn\r\n\r\n            if (cells[action.index] || !progress) {\r\n                return state\r\n            }\r\n\r\n            var turn = state.isCircleTurn ? CHARACTERS.circle : CHARACTERS.cross\r\n            cells[action.index] = turn\r\n\r\n            handCount = handCount + 1\r\n\r\n            if (handCount === 9 || !progress) {\r\n                progress = false\r\n                message = STATUSES.draw\r\n            }\r\n\r\n            if (checkWinner(cells)) {\r\n                progress = false\r\n                const winMessage = isCircleTurn ? STATUSES.win.replace('%name%', CHARACTERS.circle) : STATUSES.win.replace('%name%', CHARACTERS.cross)\r\n                message = winMessage\r\n            }\r\n\r\n            if (state.isCircleTurn) {\r\n                circleTurn = <div className=\"turn-item\">〇</div>\r\n                crossTurn = <div className=\"turn-item\"><Active>×</Active></div>\r\n            } else {\r\n                circleTurn = <div className=\"turn-item\"><Active>〇</Active></div>\r\n                crossTurn = <div className=\"turn-item\">×</div>\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                handCount: handCount,\r\n                isCircleTurn: !isCircleTurn,\r\n                circleTurn: circleTurn,\r\n                crossTurn: crossTurn,\r\n                cells,\r\n                progress,\r\n                message,\r\n            }\r\n\r\n        case 'CLICK_RESTART':\r\n            return {\r\n                handCount: 0,\r\n                isCircleTurn: true,\r\n                circleTurn: <div className=\"turn-item\"><Active>〇</Active></div>,\r\n                crossTurn: <div className=\"turn-item\">×</div>,\r\n                cells: {\r\n                    \"0\": null,\r\n                    \"1\": null,\r\n                    \"2\": null,\r\n                    \"3\": null,\r\n                    \"4\": null,\r\n                    \"5\": null,\r\n                    \"6\": null,\r\n                    \"7\": null,\r\n                    \"8\": null\r\n                },\r\n                progress: true,\r\n                message: STATUSES.stating,\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default function App() {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const cell = (i) => <Cell className=\"cell js-cell\" onClick={() => dispatch({ type: \"CLICK_CELL\", index: i })}>{state.cells[i]}</Cell>\r\n\r\n    return (\r\n        <div className=\"l-container\">\r\n            <main className=\"l-main\">\r\n                <header className=\"header\">\r\n                    <h1>TIC TAC TOE</h1>\r\n                </header>\r\n                <div className=\"display\">\r\n                    <div className=\"turn\">\r\n                        {state.circleTurn}\r\n                        {state.crossTurn}\r\n                    </div>\r\n                </div>\r\n                <div className=\"l-board\">\r\n                    <Table>\r\n                        <tbody>\r\n                            <tr>\r\n                                {cell(0)}\r\n                                {cell(1)}\r\n                                {cell(2)}\r\n                            </tr>\r\n                            <tr>\r\n                                {cell(3)}\r\n                                {cell(4)}\r\n                                {cell(5)}\r\n                            </tr>\r\n                            <tr>\r\n                                {cell(6)}\r\n                                {cell(7)}\r\n                                {cell(8)}\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"l-footer footer\">\r\n                    <div className=\"state-message js-state-message\">{state.message}</div>\r\n                    <div>\r\n                        <button className=\"button js-restart\" onClick={() => dispatch({ type: \"CLICK_RESTART\" })}>RESTART</button>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}